/* declarations for exported terrain module for the game Hanseatic League.					*/#pragma onceenum direction {	same, north, northeast, southeast, south, southwest, northwest, northwestPlus, noDirection};#define numberOfDirections 7enum terrainType {	clear, forest, mountain, ocean, swamp, desert, 	numberOfTerrainTypes, noTerrainType, forestSeed, mountainSeed};/* river & coast masks */#define noCoast			0x0000#define noRiver			0x0000#define northIn			0x0001#define northeastIn		0x0002#define southeastIn		0x0004#define southIn			0x0008#define southwestIn		0x0010#define northwestIn		0x0020#define northOut		0x0040#define northeastOut	0x0080#define southeastOut	0x0100#define southOut		0x0200#define southwestOut	0x0400#define northwestOut	0x0800#define island			0x1000void 				DestroyTerrainInfo(void);void				FillInCoast(short row, short column);unsigned			GetCoastType(short row, short column, enum direction dir);Point				GetHex(Point p); Point 				GetHexCoordinates(short row, short column, enum direction dir);unsigned			GetRiverType(short row, short column, enum direction dir);enum terrainType	GetTerrainType(short row, short column, enum direction dir);void 				InitCoastTable(void);void 				InitRiverTable(void);void 				InitTerrainTable(void);short 				IsAdjacentTerrain(short row, short column, enum terrainType type);Boolean				IsWaterHere(Point p);void				RestoreCoastInfo(void);void 				RestoreTerrainInfo(void);void 				SaveCoastInfo(void);void 				SaveTerrainInfo(void);void				SetCoastType(Point hex, unsigned type); void 				SetRiverType(short row,short column,enum direction dir, unsigned type);void 				SetTerrainType(short row, short column, enum direction dir, enum terrainType type);