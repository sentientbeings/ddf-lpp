/* This is the include file for the utilities module. It contains procedure prototype, and	*//* exported enumerated types and definitions												*/#pragma once#include <stdlib.h> /* needed for abs */#include "city.h"/*#define GetClockwise(_dir) ((_dir == northwest) ? north : _dir+1)#define GetOppositeDirection(_dir) ((_dir < south) ? _dir+3 : _dir-3)#define GetWiddershins(_dir) ((_dir == north) ? northwest : _dir-1)#define max(a, b) (((a) > (b)) ? (a) : (b))#define min(a, b) (((a) < (b)) ? (a) : (b))#define odd(a) (((a) % 2 == 0) ? 0 : (((a) > 0) ? 1 : -1))#define PointsNear(p1, p2) (abs((p1).h - (p2).h) <= 3) && (abs((p1).v - (p2).v) <= 3)#define Randomize(r) ((int) abs((Random() * (long) (r)) >> 15))#define test(a) (Randomize(1000) < (a)) */enum direction GetClockwise(enum direction dir);enum direction GetOppositeDirection(enum direction dir);enum direction GetWiddershins(enum direction dir);inline short max(short a, short b) { return ((a > b) ? a : b); }inline short min(short a, short b) { return ((a < b) ? a : b); }inline int Randomize(int val) { return ((int) abs((Random() * (long) (val)) >> 15)); }inline Boolean test(short val) { return (Randomize(1000) < val); }#define wholeFraction -1unsigned		DirectionToInMask(enum direction dir);unsigned		DirectionToOutMask(enum direction dir);char 			*concatP(char *s1, char *s2);void			FatalError(OSErr err, Str255 messageString);void 			FloatToString(Str255 stringP, float val, short places);Point			GetCenterPt(short row, short column);Point			GetCenterPt1(Point p);void 			GetProductionTradeString(char *productionString, short city, enum goodTypes good);Boolean			HexLegal(Point);unsigned short	LaborAvailable(short city);int				NumberOfBits(unsigned testVal);void 			pStrCopy(char *p1, char *p2);void			ReportError(OSErr err, Str255 messageString);void			ReportNumbers(short, short, short, short);