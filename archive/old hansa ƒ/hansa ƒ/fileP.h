#pragma once#include <math.h>#include <stdio.h>#include "build.h"#include "changeMaps.h"#include "city.h"#include "cityInfoObject.h"#include "cityNameObject.h"#include "cityNumberObject.h"#include "computer.h"#include "display.h"#include "endTurn.h"#include "globals.h"#include "hansaWindows.h"#include "learningObject.h"#include "map.h"#include "player.h"#include "trade.h"#include "transport.h"#include "utilities.h"/* menu indices for the file menu */enum fileMenuIndices {	fmNew = 1, fmSave, fmSaveAs, fmResume, fmEndTurn, fmQuit};/* rsrcID & item buttons for asking about trying to save a game. */#define tryToSaveAlert 16011#define yesButton	1#define noButton	2#define cancelButton	3#define NEW_GAME_INFO 128#define LEAGUE1_HUMAN	7#define LEAGUE1_COMPUTER 8#define LEAGUE1_INACTIVE 9#define LEAGUE2_HUMAN	10#define LEAGUE2_COMPUTER 11#define LEAGUE2_INACTIVE 12#define LEAGUE3_HUMAN	13#define LEAGUE3_COMPUTER 14#define LEAGUE3_INACTIVE 15#define LEAGUE4_HUMAN	16#define LEAGUE4_COMPUTER 17#define LEAGUE4_INACTIVE 18#define MAP_BUTTON_HISTORICAL 19#define MAP_BUTTON_FANTASY 20#define MAP_BUTTON_RANDOM 21#define LEARNING_MODE 23static int firstLeagueButton[5] = {	0, LEAGUE1_HUMAN, LEAGUE2_HUMAN, LEAGUE3_HUMAN, LEAGUE4_HUMAN};/* resource with default city names */#define cityNameID 7020static Boolean	gameInProgress = false;static SFReply	reply;static Str255	theFileName;void	destroyGame(Boolean useSavedValues);short	findFurthestCity(short city);short	findNearestNonmatchingCity(short city); void 	findStartingCities(void);Boolean	productionMatches(short city1,short city2);void	processNewGameInfo(void);void 	restoreGame(Boolean useSavedValues);Boolean	saveFile(void);void	setMapInfo(DialogPtr dP, enum mapType newType);void	setPlayerInfo(DialogPtr dP, short league, enum playerType status);void 	saveGame(void);Boolean	tryToSaveOldGame(Boolean useSavedValues);