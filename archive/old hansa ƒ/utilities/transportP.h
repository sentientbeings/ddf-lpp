/* this is the .h file for the private procedures of the transport 		*//* modules																*/#pragma once#include "cityIndexObject.h"#include "cityInfoObject.h"#include "cityNumberObject.h"#include "map.h"#include "utilities.h"#define showCalculationstatic struct transportInfo {	Point hex;	short cost;} transportTable[rowSize * columnSize];struct newTransportInfo {	struct newTransportInfo *nextP;	Point stack[100];	short fromCity;	short toCity;	short cost;};struct transportSearch {	struct transportSearch * nextP;	Point	hex;	Point	fromHex;	short	newCost[numberOfDirections];	short	costToHere;};	static struct transportInfo *headP;static struct newTransportInfo *newHeadP = NULL, *newTailP = NULL;static short cost[rowSize][columnSize];void 					attachTransportRecord(struct newTransportInfo *);void 					calculateTransportCosts(short);Boolean 				checkTermination(struct transportSearch *, short, short *);struct newTransportInfo *createTransportRecord(short, short *);void 					deleteSearchList(struct transportSearch *);struct transportSearch 	*findListHex(struct transportSearch *, Point);struct transportSearch 	*findNextHex(struct transportSearch *);void 					fixTransportPath(struct transportSearch *, struct transportSearch *, struct newTransportInfo *);short					getExistingTransportCosts(short, short, enum goodTypes);short 					getHexCost(Point, enum direction);void					insertHead(Point, short);void					insertHex(Point, short);void					insertTail(Point, short);Boolean					matchTransportRecord(short, short);void					replaceHex(Point, short);Boolean					pointsAdjacent(Point, Point);struct newTransportInfo *transportRecordExists(short, short);