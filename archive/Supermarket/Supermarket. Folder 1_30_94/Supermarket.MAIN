'==============================================================================='=                     Copyright 1992 Stazª Software, Inc.                     ='=                             All rights reserved                             ='=                          "Project.MAIN" from PG:PRO                         ='===============================================================================RESOURCES "Supermarket.RSRC","APPLpG3!"COMPILE 1,140                                     'set by PG:PROWINDOW OFF : WIDTH -2                             'standard''{PG3} <-- PG PRO uses these as a source code markers.  Do not remove them.GLOBALS "PG PRO.GLBL"GLOBALS "Supermarket.GLBL"END GLOBALSEDIT = 2                                          'set EDIT/PICTURE FIELD borderINCLUDE "PG PRO.INCL"SEGMENTINCLUDE "Supermarket.INCL"SEGMENT 20480                                     'segment break if > 20KINCLUDE "Edit Menu.FLTR"INCLUDE "Cancel.FLTR"SEGMENTINCLUDE "Return.FLTR"INCLUDE "Font.FLTR"INCLUDE "PICT.FLTR"'{PG4}'==============================================================================="@Filters":SEGMENT:                REM Use the area below for additional filters'-------------------------------------------------------------------------------'===============================================================================SELECT gAction                                    'primary branch    '---------------------------------------------------------------------------  CASE _mainAction   :GOSUB "Action:Main"         'appl level events  CASE _menuAction   :GOSUB "Action:Menu"         'menu actions  CASE _buttonAction :GOSUB "Action:Button"       'button clicked  CASE _mouseAction  :GOSUB "Action:Mouse"        'mouse down in whichClass  CASE _windowAction :GOSUB "Action:Window"       'window actions  CASE _fieldAction  :GOSUB "Action:Field"        'edit fields actions  CASE _otherAction  :GOSUB "Action:Other"        'low level eventsEND SELECT:RETURN                                 'end of primary selection'==============================================================================="@Includes":SEGMENT:         REM Use the area below for additional ".INCL" files'-------------------------------------------------------------------------------'==============================================================================="@Long Functions":SEGMENT:       REM Put your application's long functions below'-------------------------------------------------------------------------------'-----Long Functions for notes windowLOCAL FN fixMenuBar  LONG IF gActiveWnd = _NotesWnd    setMenusTo = _enable  XELSE    setMenusTo = _disable    gSaveName$ = ""  END IF  MENU _fontMenu  ,0,setMenusTo  MENU _sizeMenu  ,0,setMenusTo  MENU _styleMenu ,0,setMenusToEND FN'===============================================================================LOCAL FN fixMenuItems  LONG IF gActiveWnd = _NotesWnd    MENU _fileMenu,_openItem ,_disable    MENU _fileMenu,_newItem  ,_disable    MENU _fileMenu,_closeItem,_enable    LONG IF WINDOW(_EFTextLen)      MENU _fileMenu,_printItem,_enable    XELSE      MENU _fileMenu,_printItem,_disable    END IF  XELSE    MENU _fileMenu,_openItem ,_enable    MENU _fileMenu,_newItem  ,_enable    MENU _fileMenu,_closeItem,_disable    MENU _fileMenu,_printItem,_disable  END IFEND FN'===============================================================================LOCAL FN saveFile  GET FIELD fldHndl&,_docFld  DEF OPEN "NtesMXit"  OPEN "R",#1,gSaveName$,,gSaveVol  WRITE FIELD #1,fldHndl&  CLOSE #1  gDirty = _false  CALL SETWTITLE(WINDOW(_wndpointer),gSaveName$)END FN'===============================================================================LOCAL FN openFile  gSaveName$ = gOpenName$  gSaveVol   = gOpenVol  gDirty     = _false  fldHndl& = 0  OPEN "R",#1,gSaveName$,1,gSaveVol  LONG IF gFileType& = _"TEXT"    lgth& = LOF(1)    IF lgth& > 32000 THEN lgth& = 32000    fldHndl& = FN NEWHANDLE(lgth&+2)    LONG IF fldHndl&      READ FILE #1,[fldHndl&]+2,lgth&      % [fldHndl&],lgth&    END IF  XELSE    READ FIELD #1,fldHndl&  END IF  CLOSE #1  LONG IF fldHnld&    FN pGbuild(_NotesWnd)    EDIT FIELD _docFld,&fldHndl&    DEF DISPOSEH (fldHndl&)    CALL SETWTITLE(WINDOW(_wndpointer),gSaveName$)  END IFEND FN'===============================================================================LOCAL FN printFile  DIM my,mx  DIM t,l,b,r  CURSOR _arrowCursor  DEF LPRINT  LONG IF PRCANCEL = _false        CURSOR _watchCursor    t;8 = [PRHANDLE] + _prInfo + _rPage        GET FIELD b4Print&,_docFld    oldStart = WINDOW(_selStart)    oldEnd   = WINDOW(_selEnd)        WHILE WINDOW(_EFTextLen)      my = b:mx = l-1      theChar = FN TEGETOFFSET(my,TEHANDLE(_docFld))      SETSELECT 0,theChar      CALL TECUT(TEHANDLE(_docFld))            CALL OFFSETRECT(t,-5000,0)      EDIT FIELD -1,,@t,_statnoframed      CALL TESTYLPASTE(TEHANDLE(1))      GET FIELD tempHndl&,1      EDIT FIELD CLOSE 1      CALL OFFSETRECT(t,5000,0)            ROUTE #128      EDIT FIELD -1,&tempHndl&,@t,_statnoframed      KILL FIELD tempHndl&      ROUTE#0            LONG IF WINDOW(_EFTextLen)        CLEAR LPRINT      XELSE        CLOSE LPRINT      END IF    WEND        EDIT$(_docFld) = &b4Print&    SETSELECT oldStart,oldEnd    KILL FIELD b4Print&      END IFEND FN'==============================================================================="Action:Main"'-------------------------------------------------------------------------------SELECT gSubAction  CASE _mainStart    '    ' You can open a window in PG PRO with "FN pGbuild(_theWindow)"    ' If you change the constant name of the first window, you must also    ' change the constant in the following line.    '    FN pGbuild(_MainWnd)                          'open the first window    FN Initialize                                 'Puts up aisles, Checkouts, Wells, Starts.    searchtime&=0    sorttime&=0    checkinttime&=0    checkouttime&=0    movetime&=0    drawtime&=0    polltime&=0    TTime&=FN TICKCOUNT    '  CASE _mainOpen  CASE _mainSave  CASE _mainPrint  CASE _mainTimer  CASE _mainShutDownEND SELECT:RETURN'==============================================================================="Action:Menu"'-------------------------------------------------------------------------------SELECT gWhichMenu  CASE _appleResMenu    FN PGBuild(-_AboutWnd)  CASE _HelpMenu    SELECT gWhichItem      CASE _RunningtheProgramItem        FN PGBuild(_HelpAbtWnd)      CASE _TheEconomicsItem        CASE _ProjectsItem      CASE _MyNotesItem        FN PGBuild(_NotesWnd)    END SELECT    CASE _OptionsMenu    SELECT gWhichItem             'CASE _SearchStrategyItem      CASE _InsidersItem                'CASE _FasterItem        'CASE _SlowerItem      CASE _PauseItem        LONG IF gMoving%           gMoving% =_False         XELSE          gMoving%=_True        END IF      CASE _MakeWellsInvisibleItem        LONG IF gWellsVisible          gWellsVisible=_False          MENU _OptionsMenu, _MakeWellsInvisibleItem,_enable,"Make Wells Visible"        XELSE          gWellsVisible=_True          MENU _OptionsMenu, _MakeWellsInvisibleItem,_enable,"Make Wells Invisible"        END IF        FN RefreshMain      CASE _ProfileItem        TotalTime&=searchtime&+sorttime&+checkinttime&+checkouttime&+movetime&+drawtime&+polltime&        TEXT ,,,_patCopy        PRINT%(2,20)"search:"; (searchtime&*100)/TotalTime&;        PRINT%(70,20) "sort:";(sorttime&*100)/TotalTime&;        PRINT%(120,20) "checkint:";(checkinttime&*100)/TotalTime&;        PRINT%(200,20) "checkout:";(checkouttime&*100)/TotalTime&;        PRINT%(280,20) "move:";(movetime&*100)/TotalTime&;        PRINT%(340,20) "draw:";(drawtime&*100)/TotalTime&        PRINT%(2,30) "poll:";polltime&        PRINT%(70,30) "gInterval:";gInterval&        TEXT ,,,_patXor      CASE _RestartProfileItem        TTime&=FN TICKCOUNT        searchtime&=0        sorttime&=0        checkinttime&=0        checkouttime&=0        movetime&=0        drawtime&=0        polltime&=0    END SELECT  CASE _SearchStrategyMenu    MENU _SearchStrategyMenu, gSStrategy, _enable    gSStrategy =gWhichItem    MENU _SearchStrategyMenu, gSStrategy, _checked  CASE _ShoppersCountMenu    MENU _ShoppersCountMenu, gSCtStrategy, _enable    gSCtStrategy =gWhichItem    MENU _ShoppersCountMenu, gSCtStrategy, _checked  CASE _FasterMenu    SELECT gWhichItem           CASE _CartProductionItem        gWellSpeed=gWellSpeed*.8        LONG IF gWellSpeed<=_WellSpeedMin          gWellSpeed=_WellSpeedMin          MENU _FasterMenu, _CartProductionItem, _disable        END IF        MENU _SlowerMenu, _CartProductionItem, _enable      CASE _MovingItem        'gCartSpeed%      CASE _CheckingOutItem        DEC(gCkOutSpeed)        LONG IF gCkOutSpeed<=_CkOutSpeedMin          gCkOutSpeed=_CkOutSpeedMin          MENU _FasterMenu, _CheckingOutItem, _disable        END IF        MENU _SlowerMenu, _CheckingOutItem, _enable        'CASE speed everything up        'gMinInterval    END SELECT:  CASE _SlowerMenu    SELECT gWhichItem           CASE _CartProductionItem        gWellSpeed=gWellSpeed*1.25        LONG IF gWellSpeed>=_WellSpeedMax          gWellSpeed=_WellSpeedMax          MENU _SlowerMenu, _CartProductionItem, _disable        END IF        MENU _FasterMenu, _CartProductionItem, _enable      CASE _MovingItem      CASE _CheckingOutItem        INC(gCkOutSpeed)        LONG IF gCkOutSpeed>=_CkOutSpeedMax          gCkOutSpeed=_CkOutSpeedMax          MENU _SlowerMenu, _CheckingOutItem, _disable        END IF        MENU _FasterMenu, _CheckingOutItem, _enable    END SELECT:END SELECT:gNewTime&=FN TICKCOUNTRETURN'==============================================================================="Action:Button"'-------------------------------------------------------------------------------SELECT gWhichClassEND SELECT:RETURN'==============================================================================="Action:Mouse"'-------------------------------------------------------------------------------SELECT gWhichClass  CASE _MainWnd    SELECT gClickStatus%      CASE _noClick                               'MOUSE BUTTON NOT pressed since last MOUSE(0)      CASE _click1                                'single-click EVENT      CASE _click2                                'double-click EVENT        'Wellhit=_False:well=0        'CALL SETPT(gwpt,gMouseX%,gMouseY%)        'DO        'INC(well)        'CALL SETRECT(gwrect,gWell.WLoc.h%(well),gWell.WLoc.v%(well),gWell.WLoc.h%(well)+gWellWidth,gWell.WLoc.v%(well)+gWellHeight)'set initial rectangle        'Wellhit= FN PTINRECT(gwpt,gwrect)        'UNTIL Wellhit OR (well=gNbrWells)         'IF Wellhit THEN BEEP      CASE _click1was      CASE _click2was                             'double-click EVENT AND MOUSE still down.      CASE _click1nDrag                           'same as _click1 with MOUSE still being dragged.         'PLOT gMouseX%,gMouseY%        'CIRCLE MOUSE(_lastMHorz), MOUSE(_lastMVert),3      CASE _click2nDrag                           'same as _click2 with MOUSE still being dragged.      CASE _click3nDrag                           'same as _click3 with MOUSE still being dragged.    END SELECT    'x=gMouseX%    'v=gMouseY%                                    'get mouse down pos    'PLOT TO x, v                                  'set pen at point    'PRINT%(x,v)gClickStatus%;END SELECT:RETURN'==============================================================================="Action:Window"'-------------------------------------------------------------------------------SELECT gSubAction  CASE _windowClose  CASE _windowUpdate    SELECT gWhichWindow%      CASE _MainWnd        FN RefreshMain        'CASE ELSE    END SELECT  CASE _windowActivate  CASE _windowDeactivate  CASE _windowSized  CASE _windowMoved  CASE _windowClicked  CASE _windowWillZoomOut  CASE _windowWillZoomIn  CASE _windowWillGrow  CASE _windowDocWillMoveEND SELECT:RETURN'==============================================================================="Action:Field"'-------------------------------------------------------------------------------efID=WINDOW(_EFnum)SELECT gSubAction  CASE _fieldActivate  CASE _fieldChanging    'CASE _fieldClear    'gCheckout.CMaxItems%(efID)=100  CASE _fieldReturn,_fieldTab,_fieldRight,_fieldDown            LONG IF WINDOW(_activeWnd)=_MainWnd      SELECT efID                                 'WINDOW(_EFnum)                       'get the current field number        CASE gNbrCheckouts                        'EF 6 is last EF so wrap to 1st          EDIT FIELD 1                            'move to the next field          SETSELECT 0,300                         'select all text in field        CASE gNbrWells+100                        'Remove this case if edit fields stay out          EDIT FIELD 101                          'move to the next field          SETSELECT 0,300                         'select all text in field        CASE ELSE                                 'if not last edit field move down          EDIT FIELD efID+1                       'WINDOW(_EFnum)+1             'move to the next field          SETSELECT 0,300                         'select all text in field      END SELECT    END IF  CASE _fieldUp,_fieldShiftTab,_fieldLeft    LONG IF WINDOW(_activeWnd)=_MainWnd      SELECT efID                                 'WINDOW(_EFnum)                       'get current edit field number        CASE 1                                    'move down to last EF          EDIT FIELD gNbrCheckouts                      SETSELECT 0,300                         'select all text in field        CASE 101                                  'Remove this case if edit fields stay out          EDIT FIELD gNbrWells+100                      SETSELECT 0,300                         'select all text in field        CASE ELSE                                 'if it ainÕt the top EF move up one          EDIT FIELD efID-1                       'WINDOW(_EFnum)-1             'move up (or over) a field          SETSELECT 0,300                         'select all text in field      END SELECT    END IF  CASE _fieldKeyPressed    LONG IF WINDOW(_activeWnd)=_MainWnd      IF efID<100 THEN gCNewLimitFlag=_True ELSE gWNewLimitFlag=_True      LONG IF (ASC(gKey$) < ASC("0") OR ASC(gKey$) > ASC("9")) AND (ASC(gKey$)<>8) AND (ASC(gKey$)<28 OR ASC(gKey$)>31)        'TEXT _monaco,9,,_srcCopy:PRINT%(20,20) "asc is";ASC(gKey$);:TEXT _monaco,9,,_srcXor        gKey$=""                                  'if not a number or delete, ignore it      END IF      'LONG IF (gCheckout.CMaxItems%(efID)=0) <> (OldLimit=0)'Lane has opened or shut      'PLOT gCheckouth%+gShopperWidth+1,gCheckout.Cv%(efID)+_COffset TO gCheckouth%+gShopperWidth+1,gCheckout.Cv%(efID)+_COffset+gShopperHeight       'END IF    END IF    'CASE _fieldReturn    'CASE _fieldTab    'CASE _fieldShiftTab    'CASE _fieldLeft    'CASE _fieldRight    'CASE _fieldUp    'CASE _fieldDown  CASE _fieldClickedEND SELECT:RETURN'==============================================================================="Action:Other"'-------------------------------------------------------------------------------SELECT gSubAction  CASE _otherDisk:gAction=0    :    REM Prevents SFOpen dialog on disk insert  CASE _otherSwitch  CASE _otherScrap  CASE _otherCursor  CASE _otherKeyPressed  CASE _otherBeforeMenu  CASE _otherNullEvent    LONG IF gMoving%      FN CheckVariables      PTime&=FN TICKCOUNT      FN ShoppersSearch                           'Shoppers choose target lines      searchtime&=searchtime&+FN TICKCOUNT-PTime&      PTime&=FN TICKCOUNT      IF gNbrShoppers>0 THEN FN ShoppersSort      'Shoppers sorted by horizontal position      sorttime&=searchtime&+FN TICKCOUNT-PTime&      PTime&=FN TICKCOUNT      FN CheckInterval                            'How long since last move?      checkinttime&=searchtime&+FN TICKCOUNT-PTime&      PTime&=FN TICKCOUNT      FN ShoppersCheckOut                         'Check out items, eliminate empty carts      checkouttime&=searchtime&+FN TICKCOUNT-PTime&      'FN ShowLinelength      PTime&=FN TICKCOUNT      FN ShoppersMove                             'New shopper positions calculated      movetime&=searchtime&+FN TICKCOUNT-PTime&      PTime&=FN TICKCOUNT      'FN ShowLinelength      'FN ShowLineItemlength      FN ShoppersDraw      drawtime&=searchtime&+FN TICKCOUNT-PTime&      PTime&=FN TICKCOUNT      'IF RND(10)=1 THEN       FN PollWells                                'Randomly produce new shoppers from wells      polltime&=searchtime&+FN TICKCOUNT-PTime&    END IF  CASE _otherFilterEvent  CASE _otherUser  CASE _otherUserInit  CASE _otherUserUpdate  CASE _otherUserClick  CASE _otherUserDisposeEND SELECT:RETURN'==============================================================================="@Subroutines":SEGMENT:             REM Put your application's subroutines below'-------------------------------------------------------------------------------'===============================================================================